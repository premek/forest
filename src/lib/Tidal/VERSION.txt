Tidal Changelog
--------------------------------------------------------------------------------------

CHANGES:
0.10.2 (2015/04/30)
- Fixed bug in TileLayer when referencing a map object

0.10.1 (2015/01/010)
- Added ObjectLayer:removeObject
- Added ObjectLayer:newObject
- Added Map:removeLayer
- Added optional argument for setting batch draw per map
- Added optional argument for setting bbox draw per object
- Changed Object:addObject to remove object from previous layer and 
  reference the new layer
- Changed image parameter in TileSet constructor to accept a table of 
  images
- Changed Map:setDrawRange to always redraw layers afterward
- Changed Map:newCustomLayer to fill in fields for custom table
- Changed tilelayer to clear batches when switching to non-batch drawing
- Miscellaneous tweaks and cleanups

0.10.0 (2015/01/03)
- Added Loader.load shortcut to module
- Added support for image collection in tileset
- Added support for non-batch drawing
- Added _VERSION field to module
- Added Tile:getWidth/getHeight
- Added drawing imagelayers at correct position shown on Tiled
- Added support for object rotation
- Added Tile animation
- Added support for object flipping
- Added support for importing tile collision data
- Removed parallax support
- Removed layer:getOrientation
- Fixed drawing non-iso objects with images
- Changed name of library to "Tidal"
- Changed offsetX/offsetY fields to ox/oy for layer classes
- Changed layer:resetOrientation to layer:resetTileOrientation
- Changed tile.terrain to reference terrain type directly
- Tweaked miscellaneous stuff

0.9.2F (2014/01/27)
- Added support for terrain
- Added Map:newImageLayer
- Fixed Map:newCustomLayer

0.9.1F (2014/01/24)
- Fixed isometric draw range to clamp right boundary correctly
- Added support for image layers
- Added ability to specify draw position when using draw methods

0.9.0F (2014/01/13)
- (Fork) Public stable release
- Added support for chunk loading for cooperative multitasking
- Added staggered orientation support
- Added Class module for easy extension
- Improved loading speed
- Removed support for saving maps
- Numerous miscellaneous changes and rewrite

0.12.1 (10/31/12)
- TileLayer:drawAfterTile() has been reworked into TileLayer:newAfterTileFunction()
- Arguments for the Map functions that create and add map components directly to the 
	map have changed. (Map:newTileLayer(), Map:newObjectLayer(), etc)

0.12.0 (10/17/12)
- Maps can now be saved with Loader.save()
- Introduced ATL properties

0.11.2 (10/08/12)
- TileLayers will now calculate their own viewable tile range.
- Added parallax support for TileLayers.
- Added offset support for Maps and TileLayers.
- You can now load .tmx files without including the extension in the file name.
- Map.drawRange has been removed and replaced with viewX, viewY, viewScaling, and viewPadding.
	Map:autoDrawRange() and other such interface functions have not changed.


0.11.1 (09/26/12)
- Added a 'visible' value to Map, ObjectLayer, TileLayer, and Object
- Created ObjectLayer:toCustomLayer()
- Created Map:removeLayer()

0.11.0 (09/04/12)
- Renamed Map.drawList to Map.layerOrder.
- Renamed Map.drawPosition to Map.layerPosition.
- Combined Map.tileLayers and Map.objectLayers into one table - Map.layers.
- The functionality of tileData is now combined with TileLayer.
- Changed Map.__call to return layers by their name.
- Created Map.callback() to forward love callbacks to layers.
- Created Map.swapLayers()
- Created Map.newCustomLayers() which is a new interface for creating custom layers.
- Classes now remember their class name.
- Removed object movement functions to deter the use of objects other than reading data from.
- Removed the fixPO2 option for the loader.
- Generally cleaned up the code and made it easier to read.
- Properties are now automatically converted into proper types (numbers, boolean, string) when loaded.
- Readme file changed. There is now a new VERSION.txt file for version information.


0.10.2 (04/26/12)
- Relative paths now fully work. Before, ATL did not like to travel backwards in 
	a directory from a map file to reach a tileset.

0.10.1 (04/20/12)
- Added quit compatibility for love 0.8.0 in the example files
- AdvTiledLoader can now be correctly required from any subfolder
- Fixed a bug with map.drawObjects not working
- Undefined object colors will now appear grey instead of black
- Added Loader.drawObjects and Loader.useSpriteBatch values. These values will be 
	applied to any new map that is loaded.
- Fixed a bug where the map would be drawn incorrectly if the map's width and height 
	were different

0.10.0 (04/11/12)
- 2d arrays are replaced with a much easier to use grid class.
- Tiles are now directly inserted into TileLayer.tileData. You no longer have to 
	look them up via their ID in Map.tiles.
- Tile indexes are now the same as their coordinants as shown inside the Tiled.
- Added support for Tiled version 0.8.0. This includes tile rotation, polygon 
	objects, polyline objects, tilemap offset, and tilemap propterties.
- Moved the object drawing code from object layers to the objects themselves.
- Added functions tileCopy(), tilePaste(), tileRotate(), tileFlipX(), tileFlipY() 
	to TileLayers.

0.9.0 (8/22/11)
- Advanced Tile Loader now has a wiki page and a github repository!
- Cleaned up the code quite a bit.
- Classes are now broken up into individual files rather than grouping similar 
	ones into one file.
- Many identifiers have been changed to be less confusing and more consistent. Now 
	camelCase is used to separate words instead of underscores. Internal 
	functions and data are now prefixed with an underscore.
- Sprite batch mode can now be set through the map or through individual tile 
	layers. Tile layer settings take precedence.
- A bug with layer transparency has been fixed.
- Tile:draw() now accepts parameters for scaling, rotation, and offset.
- TileLayer:drawAfterTile() now works with multiple functions
- Forcing a redraw is now automatic when you switch sprite batch modes.
- Added support for flipped tiles that were introduced in Tiled version 0.7.1

0.8.2 (5/9/11):
- Tileset images are now cached between maps.
- Added an option to automatically pad images for PO2. To do this set 
	Loader.fix_po2 to true.
- Changed Map.tl and Map.ol back to their old names. Map.tl and Map.ol remain as 
	aliases.
- Tile layers can now render using sprite batches by setting TileLayer.use_batch 
	to true.
- Added an init.lua file.
- Removed hardcoded require() paths. Added in global TILED_LOADER_PATH to point 
	to the library path.
- Renamed the TileSet functions getWidth() and getHeight() to tilesWide() and 
	tilesHigh().

0.8.1 (3/10/11):
- Renamed Map.tilelayers and Map.objectlayers to Map.tl and Map.ol respectively.
- Added function Tile.drawAfterTile()
- You may now define a draw() function for objects which overrides the default 
	drawing routine

0.8.0 (2/28/11):
- Initial release


For more information see here:
http://love2d.org/forums/viewtopic.php?f=5&t=2567

--------------------------------------------------------------------------------------
